{"version":3,"sources":["components/PostList.js","components/PostForm.js","App.js","reportWebVitals.js","index.js"],"names":["PostList","posts","deleteItems","className","map","e","task","data","onClick","id","PostForm","addTask","items","useState","inpValue","setInpValue","valueData","setValueData","handleSubmit","preventDefault","style","color","length","onSubmit","type","value","onChange","currentTarget","onKeyPress","kay","placeholder","App","JSON","parse","localStorage","getItem","setItems","useEffect","setItem","stringify","newItem","Math","random","toString","substr","complete","alert","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAkBgBA,MAbhB,YAA6C,IAAzBC,EAAwB,EAAxBA,MAAQC,EAAgB,EAAhBA,YAExB,OACI,qBAAKC,UAAU,YAAf,SACKF,EAAMG,KAAK,SAACC,GAAD,OAAO,sBAAKF,UAAU,aAAf,cAA0CE,EAAEC,KAC3D,sBAAMH,UAAU,YAAhB,SAA6BE,EAAEE,OAC/B,wBAAQC,QAAU,kBAAMN,EAAYG,EAAEI,KAAKN,UAAU,aAArD,SAAkE,sCAFlBE,EAAEI,U,MC2ClDC,MAjDhB,YAAwC,IAApBC,EAAmB,EAAnBA,QAAUC,EAAS,EAATA,MAE1B,EAAmCC,mBAAS,IAA5C,mBAAQC,EAAR,KAAmBC,EAAnB,KAEA,EAAqCF,mBAAS,IAA9C,mBAAQG,EAAR,KAAoBC,EAApB,KAOMC,EAAe,SAACb,GAClBA,EAAEc,iBACFR,EAAQG,EAAWE,GACnBD,EAAY,IACZE,EAAa,KASjB,OACI,gCACI,qBAAIG,MAAO,CAACC,MAAM,SAAlB,uHAAkDT,EAAMU,UACxD,qBAAKnB,UAAU,cAAf,SAEI,uBAAMoB,SAAUL,EAAhB,UACI,uBACIf,UAAU,aACVqB,KAAK,OACLC,MAAOX,EACPY,SA5BC,SAAArB,GAAC,OAAIU,EAAaV,EAAEsB,cAAcF,QA6BnCG,WAjBG,SAACvB,GACN,UAAVA,EAAEwB,KACFX,EAAab,IAgBDyB,YAAa,wEAEjB,uBAAO3B,UAAU,aAAcqB,KAAK,iBAC7BC,MAAOT,EACPU,SAhCE,SAAArB,GAAC,OAAIY,EAAaZ,EAAEsB,cAAcF,UAkC3C,wBAAQtB,UAAU,MAAlB,6E,YCML4B,MAxCf,WAEU,MAA0BlB,mBAC3BmB,KAAKC,MAAMC,aAAaC,QAAQ,WAC1B,IAFL,mBAAOvB,EAAP,KAAcwB,EAAd,KA6BD,OAxBDC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAU3B,MAC5C,CAACA,IAuBA,sBAAKT,UAAU,oBAAf,UACI,cAAC,EAAD,CAAUQ,QAtBjB,SAAkBG,EAAWE,GAEzB,GAAIF,EAAU,CAEV,IAAM0B,EAAU,CACZ/B,GAAIgC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxCtC,KAAKQ,EACLP,KAAKS,EACL6B,SAAS,QAEbT,GAAS,uCAASxB,GAAT,CAAiB4B,YAG1BM,MAAM,8EASuBlC,MAAOA,IACrC,cAAC,EAAD,CAAUX,MAAOW,EAAOV,YAPV,SAACO,GAClB2B,EAAUxB,EAAMmC,QAAQ,SAACC,GAAD,OAAUA,EAAKvC,KAAOA,aC3B5CwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be016b53.chunk.js","sourcesContent":["\r\n\r\nimport \"./PostList.css\"\r\n\r\n\r\nfunction PostList ({posts , deleteItems } ) {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {posts.map ((e) => <div className=\"block_task\" key={e.id} > {e.task}\r\n                <span className=\"data_span\">{e.data}</span>\r\n                <button onClick={ () => deleteItems(e.id)} className=\"but_delete\"><p>x</p></button>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default PostList","import \"./PostForm.css\"\r\nimport {useState} from \"react\";\r\n\r\nfunction PostForm ({addTask , items} ) {\r\n\r\n    const [ inpValue , setInpValue ] = useState(\"\")\r\n\r\n    const [ valueData , setValueData ] = useState(\"\")\r\n\r\n    const handleChange = e => setInpValue (e.currentTarget.value)\r\n\r\n    const handleChangeData = e => setValueData(e.currentTarget.value)\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        addTask(inpValue , valueData)\r\n        setInpValue(\"\")\r\n        setValueData(\"\")\r\n    }\r\n\r\n    const handleKayPress = (e) =>{\r\n        if (e.kay === \"Enter\") {\r\n            handleSubmit(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h2 style={{color:\"white\"}}>Список  Напоминание  {items.length}</h2>\r\n            <div className=\" form_block\">\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        className=\"input_text\"\r\n                        type=\"text\"\r\n                        value={inpValue}\r\n                        onChange={handleChange}\r\n                        onKeyPress={handleKayPress}\r\n                        placeholder={\"ввидите техт\"}\r\n                    />\r\n                    <input className=\"input_text\"  type=\"datetime-local\"\r\n                           value={valueData}\r\n                           onChange={handleChangeData}\r\n                    />\r\n                    <button className=\"but\">сахранить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default PostForm","\nimport {useState , useEffect} from \"react\";\n\nimport PostLIst from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\n\n\nfunction App() {\n\n          const [items, setItems] = useState(\n         JSON.parse(localStorage.getItem(\"items\")) ||\n               []\n          )\n\n        useEffect(() => {\n          localStorage.setItem(\"items\", JSON.stringify(items))\n        }, [items])\n\n         function addTask (inpValue , valueData) {\n             // id: Math.random().toString(36).substr(2,9),\n             if (inpValue) {\n\n                 const newItem = {\n                     id: Math.random().toString(36).substr(2,9),\n                     task:inpValue,\n                     data:valueData,\n                     complete:\"dddd\",\n                 }\n                 setItems(() =>[...items , newItem])\n             }\n             else {\n                 alert(\"Введите Текст\")\n             }\n         }\n         const  deleteItems = (id) => {\n             setItems( items.filter( (item) => item.id !== id))\n         }\n\n         return (\n            <div className=\" container block \">\n                <PostForm addTask={ addTask } items={items}/>\n                <PostLIst posts={items} deleteItems={deleteItems} />\n\n            </div>\n        );\n      }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}